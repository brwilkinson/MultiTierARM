{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    // Global
    "DeploymentID": {
      "type": "string",
      "defaultValue": "101",
      "minLength": 2
    },
    "Prefix": {
      "type": "string",
      "defaultValue": "MSFT",
      "minLength": 1
    },
    "Environment": {
      "type": "string",
      "defaultValue": "Dev",
      "allowedValues": [
        "Dev",
        "Test",
        "Prod"
      ]
    },
    "vmStorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    // Used for all VM's
    "vmAdminUserName": {
      "type": "string",
      "defaultValue": "BRW",
      "minLength": 1
    },
    // Used for all VM's
    "vmAdminPassword": {
      "type": "securestring"
    },
    "vmDomainName": {
      "type": "string",
      "defaultValue": "Contoso.com",
      "allowedValues": [
        "Contoso.com",
        "AlpineSkiHouse.com",
        "Fabrikam.com",
        "TreyResearch.net"
      ]
    },
    "vmWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview"
      ]
    },
    "numberOfInstancesMemberServer": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 20,
      "metadata": {
        "description": "Number of Member Server VMs to deploy"
      }
    },
    "numberOfInstancesMidTierServer": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 20,
      "metadata": {
        "description": "Number of Mid Tier Server VMs to deploy"
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access artifactsLocation"
      }
    },
    "vaultName": {
      "type": "string",
      "defaultValue": "kvContoso",
      "metadata": {
        "description": "Name of the KeyVault"
      }
    },
    "vaultResourceGroup": {
      "type": "string",
      "defaultValue": "rgGlobal",
      "metadata": {
        "description": "Resource Group of the KeyVault"
      }
    },
    "certificateUrl": {
      "type": "string",
      "defaultValue": "https://kvcontoso.vault.azure.net:443/secrets/contosowildcard",
      "metadata": {
        "description": "Url of the certificate with version in KeyVault e.g. https://testault.vault.azure.net/secrets/testcert"
      }
    }
  },
  "variables": {
    // Global
    "Deployment": "[concat(parameters('Prefix'),parameters('Environment'),parameters('DeploymentID'))]",
    //"rgName": "[concat('rg', variables('Deployment'))]",
    "saName": "[toLower(concat('sa', variables('Deployment')))]",

    // SubDeployments
    "dpSetvNetDNS": "https://raw.githubusercontent.com/brwilkinson/Azure/master/dpSetvNetDNS.json",

    // Network
    "snPrefix": "10.0.0.0/16",
    "snName01": "[concat('sn', variables('Deployment'),'-01')]",
    "snName01Prefix": "10.0.0.0/24",
    "snName02": "[concat('sn', variables('Deployment'),'-02')]",
    "snName02Prefix": "10.0.1.0/24",

    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', concat('vn',Variables('Deployment')))]",
    "SubnetRef": "[concat(variables('VnetID'), '/subnets/', variables('snName01'))]",

    // VM Global
    "vmSize": "Standard_D1",
    "vmImagePublisher": "MicrosoftWindowsServer",
    "vmImageOffer": "WindowsServer",
    "vmStorageContainerName": "vhds",
    "ConfigData": "https://raw.githubusercontent.com/brwilkinson/Azure/master/ConfigurationData.psd1",
    "Domain": "[split(parameters('vmDomainName'),'.')[0]]",

    // DC1
    "DC1vmName": "[concat('vm', variables('Deployment'),'DC1')]",
    "DC1vmOSDiskName": "[concat(variables('DC1vmName'),'_vmOSDisk')]",
    "DC1vmDataDiskName": "[concat(variables('DC1vmName'),'_vmDataDisk')]",
    "DC1vmNicName": "NIC_vmDC1",
    "DC1PublicDNSName": "[toLower(concat(variables('Domain'),variables('DC1vmName')))]",
    "DC1PublicIPName": "PublicIP_vmDC1",
    "DC1PrivateIPAddress": "10.0.0.10",
    "DC1DSCConfFunction": "vmdscDC1Configuration.ps1\\Main",

    // DC2
    "DC2vmName": "[concat('vm', variables('Deployment'),'DC2')]",
    "DC2vmOSDiskName": "[concat(variables('DC2vmName'),'_vmOSDisk')]",
    "DC2vmDataDiskName": "[concat(variables('DC2vmName'),'_vmDataDisk')]",
    "DC2vmNicName": "NIC_vmDC2",
    "DC2PublicDNSName": "[toLower(concat(variables('Domain'),variables('DC2vmName')))]",
    "DC2PublicIPName": "PublicIP_vmDC2",
    "DC2PrivateIPAddress": "10.0.0.11",
    "DC2DSCConfFunction": "vmdscDC2Configuration.ps1\\Main",

    // MSX
    "MSXDSCConfFunction": "vmdscMSXConfiguration.ps1\\Main",

    // MTX
    "MTXDSCConfFunction": "vmdscMTXConfiguration.ps1\\Main"
  },
  "resources": [
    {
      "name": "[concat('vn',Variables('Deployment'))]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [ ],
      "tags": {
        "displayName": "vNet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('snPrefix')]"
          ]
        },
        "dhcpOptions": {
          "dnsServers": [
            "[variables('DC1PrivateIPAddress')]",
            //"[variables('DC2PrivateIPAddress')]",
            "8.8.8.8"
          ]
        },
        "subnets": [
          {
            "name": "[variables('snName01')]",
            "properties": {
              "addressPrefix": "[variables('snName01Prefix')]"
            }
          },
          {
            "name": "[variables('snName02')]",
            "properties": {
              "addressPrefix": "[variables('snName02Prefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('saName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [ ],
      "tags": {
        "displayName": "saName"
      },
      "properties": {
        "accountType": "[parameters('vmStorageAccountType')]"
      }
    },
    // DC1 NIC
    {
      "name": "[variables('DC1vmNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', concat('vn',Variables('Deployment')))]"
      ],
      "tags": {
        "displayName": "vmDC1_NIC"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('DC1PrivateIPAddress')]",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('DC1PublicIPName'))]"
              }
            }
          }
        ]
      }
    },
    // DC2 NIC
    {
      "name": "[variables('DC2vmNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', concat('vn',Variables('Deployment')))]"
      ],
      "tags": {
        "displayName": "vmDC2_NIC"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('DC2PrivateIPAddress')]",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('DC2PublicIPName'))]"
              }
            }
          }
        ]
      }
    },
    // MSX NIC
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "name": "[concat('NIC_vmMS', copyIndex(1))]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstancesMemberServer')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', concat('vn',Variables('Deployment')))]"
      ],
      "tags": {
        "displayName": "vmMSX_NIC"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId( 'Microsoft.Network/publicIPAddresses', concat('PublicIP_vmMS', copyIndex(1)) )]"

              }
            }
          }
        ]
      }
    },
    // MTX NIC
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "name": "[concat('NIC_vmMT', copyIndex(1))]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstancesMidTierServer')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', concat('vn',Variables('Deployment')))]"
      ],
      "tags": {
        "displayName": "vmMTX_NIC"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId( 'Microsoft.Network/publicIPAddresses', concat('PublicIP_vmMT', copyIndex(1)) )]"

              }
            }
          }
        ]
      }
    },
    // DC1 VM
    {
      "name": "[variables('DC1vmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('saName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('DC1vmNicName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('DC1PublicIPName'))]"
      ],
      "tags": {
        "displayName": "vmDC1",
        "Environment": "[parameters('Environment')]"
        
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "DC1",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmImagePublisher')]",
            "offer": "[variables('vmImageOffer')]",
            "sku": "[parameters('vmWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('DC1vmOSDiskName')]",
            "vhd": {
              "uri": "[concat('http://', variables('saName'), '.blob.core.windows.net/', variables('vmStorageContainerName'), '/', variables('DC1vmOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[variables('DC1vmDataDiskName')]",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://', variables('saName'), '.blob.core.windows.net/', variables('vmStorageContainerName'), '/', variables('DC1vmDataDiskName'), '.vhd')]"
              },
              "caching": "None",
              "diskSizeGB": "127",
              "createOption": "Empty"

            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('DC1vmNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "vmdscDC1",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('DC1vmName'))]"
          ],
          "tags": {
            "displayName": "vmdscDC1",
            "Environment": "parameters('Environment')"  
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": "true",
            "settings": {
              "modulesUrl": "[concat(parameters('_artifactsLocation'), '/', 'dsc.zip')]",
              "sasToken": "[parameters('_artifactsLocationSasToken')]",
              "configurationFunction": "[variables('DC1DSCConfFunction')]",
              "Properties": {
                "DomainName": "[parameters('vmDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('vmAdminUserName')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('vmAdminPassword')]"
              },
              "DataBlobUri": "[variables('ConfigData')]"
            }
          }
        }
      ]
    },
    // DC2 VM
    {
      "name": "[variables('DC2vmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('saName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('DC2vmNicName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('DC2PublicIPName'))]"
      ],
      "tags": {
        "displayName": "vmDC2",
        "Environment": "[parameters('Environment')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "DC2",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmImagePublisher')]",
            "offer": "[variables('vmImageOffer')]",
            "sku": "[parameters('vmWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('DC2vmOSDiskName')]",
            "vhd": {
              "uri": "[concat('http://', variables('saName'), '.blob.core.windows.net/', variables('vmStorageContainerName'), '/', variables('DC2vmOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[variables('DC2vmDataDiskName')]",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://', variables('saName'), '.blob.core.windows.net/', variables('vmStorageContainerName'), '/', variables('DC2vmDataDiskName'), '.vhd')]"
              },
              "caching": "None",
              "diskSizeGB": "127",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('DC2vmNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "vmdscDC2",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('DC2vmName'))]"
          ],
          "tags": {
            "displayName": "vmdscDC2"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": "true",
            "settings": {
              "modulesUrl": "[concat(parameters('_artifactsLocation'), '/', 'dsc.zip')]",
              "sasToken": "[parameters('_artifactsLocationSasToken')]",
              "configurationFunction": "[variables('DC2DSCConfFunction')]",
              "Properties": {
                "DomainName": "[parameters('vmDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('vmAdminUserName')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('vmAdminPassword')]"
              },
              "DataBlobUri": "[variables('ConfigData')]"
            }
          }
        }
      ]
    },
    // MidTier VM Loop
    {
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "name": "[concat('vm', variables('Deployment'), 'MT' ,copyIndex(1))]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('numberOfInstancesMidTierServer')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('saName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat('NIC_vmMT', copyIndex(1)))]",
        "[concat('Microsoft.Network/publicIPAddresses/', concat('PublicIP_vmMS', copyIndex(1)))]"
      ],
      "tags": {
        "displayName": "vmMTX",
        "Environment": "[parameters('Environment')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat('MT', copyIndex(1))]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]",
          "secrets": [
            {
              "sourceVault": {
                "id": "[resourceId(parameters('vaultResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('vaultName'))]"
              },
              "vaultCertificates": [
                {
                  "certificateUrl": "[parameters('certificateUrl')]",
                  "certificateStore": "My"
                },
                {
                  "certificateUrl": "[parameters('certificateUrl')]",
                  "certificateStore": "Root"
                },
                {
                  "certificateUrl": "[parameters('certificateUrl')]",
                  "certificateStore": "CA"
                }
              ]
            }
          ]
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmImagePublisher')]",
            "offer": "[variables('vmImageOffer')]",
            "sku": "[parameters('vmWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat('MT', copyIndex(1), '_vmosDisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('saName'), '.blob.core.windows.net/', variables('vmStorageContainerName'), '/', 'MT', copyIndex(1), '_vmOsDisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat('MT', copyIndex(1), '_vmDataDisk')]",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://', variables('saName'), '.blob.core.windows.net/', variables('vmStorageContainerName'), '/', 'MT', copyIndex(1), '_vmDataDisk', '.vhd')]"
              },
              "caching": "ReadWrite",
              "diskSizeGB": "127",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('NIC_vmMT', copyIndex(1)))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "vmdscMTX",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', concat('vm', variables('Deployment'), 'MT' ,copyIndex(1)))]"
          ],
          "tags": {
            "displayName": "vmdscMTx"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": "true",
            "settings": {
              "modulesUrl": "[concat(parameters('_artifactsLocation'), '/', 'dsc.zip')]",
              "sasToken": "[parameters('_artifactsLocationSasToken')]",
              "configurationFunction": "[variables('MTXDSCConfFunction')]",
              "Properties": {
                "DomainName": "[parameters('vmDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('vmAdminUserName')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('vmAdminPassword')]"
              },
              "DataBlobUri": "[variables('ConfigData')]"
            }
          }
        }
      ]
    },
    // MS VM Loop
    {
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "name": "[concat('vm', variables('Deployment'), 'MS' ,copyIndex(1))]",
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('numberOfInstancesMemberServer')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('saName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat('NIC_vmMS', copyIndex(1)))]",
        "[concat('Microsoft.Network/publicIPAddresses/', concat('PublicIP_vmMT', copyIndex(1)))]"
      ],
      "tags": {
        "displayName": "vmMSX",
        "Environment": "[parameters('Environment')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat('MS', copyIndex(1))]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]",
          "secrets": [
            {
              "sourceVault": {
                "id": "[resourceId(parameters('vaultResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('vaultName'))]"
              },
              "vaultCertificates": [
                {
                  "certificateUrl": "[parameters('certificateUrl')]",
                  "certificateStore": "My"
                },
                {
                  "certificateUrl": "[parameters('certificateUrl')]",
                  "certificateStore": "Root"
                },
                {
                  "certificateUrl": "[parameters('certificateUrl')]",
                  "certificateStore": "CA"
                }
              ]
            }
          ]

        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vmImagePublisher')]",
            "offer": "[variables('vmImageOffer')]",
            "sku": "[parameters('vmWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat('MS', copyIndex(1), '_vmosDisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('saName'), '.blob.core.windows.net/', variables('vmStorageContainerName'), '/', 'MS', copyIndex(1), '_vmOsDisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat('MS', copyIndex(1), '_vmDataDisk')]",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://', variables('saName'), '.blob.core.windows.net/', variables('vmStorageContainerName'), '/', 'MS', copyIndex(1), '_vmDataDisk', '.vhd')]"
              },
              "caching": "None",
              "diskSizeGB": "127",
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('NIC_vmMS', copyIndex(1)))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "vmdscMSx",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', concat('vm', variables('Deployment'), 'MS' ,copyIndex(1)))]"
          ],
          "tags": {
            "displayName": "vmdscMSx"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.19",
            "autoUpgradeMinorVersion": "true",
            "settings": {
              "modulesUrl": "[concat(parameters('_artifactsLocation'), '/', 'dsc.zip')]",
              "sasToken": "[parameters('_artifactsLocationSasToken')]",
              "configurationFunction": "[variables('MSXDSCConfFunction')]",
              "Properties": {
                "DomainName": "[parameters('vmDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('vmAdminUserName')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('vmAdminPassword')]"
              },
              "DataBlobUri": "[variables('ConfigData')]"
            }
          }
        }
      ]
    },
    // DC1 Public IP
    {
      "name": "[variables('DC1PublicIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [ ],
      "tags": {
        "displayName": "vmDC1_PublicIP"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('DC1PublicDNSName')]"
        }
      }
    },
    // DC2 Public IP
    {
      "name": "[variables('DC2PublicIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [ ],
      "tags": {
        "displayName": "vmDC2_PublicIP"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('DC2PublicDNSName')]"
        }
      }
    },
    // MS1 Public IP
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "name": "[concat('PublicIP_vmMS', copyIndex(1))]",
      "copy": {
        "name": "PublicIPLoop",
        "count": "[parameters('numberOfInstancesMemberServer')]"
      },

      "dependsOn": [ ],
      "tags": {
        "displayName": "vmMSX_PublicIP"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[toLower( concat(variables('Domain'),'vm', variables('Deployment'), 'MS' ,copyIndex(1) ) ) ]"
        }
      }
    },
    // MTX Public IP
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "name": "[concat('PublicIP_vmMT', copyIndex(1))]",
      "copy": {
        "name": "PublicIPLoop",
        "count": "[parameters('numberOfInstancesMidTierServer')]"
      },

      "dependsOn": [ ],
      "tags": {
        "displayName": "vmMTX_PublicIP"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[toLower( concat(variables('Domain'),'vm', variables('Deployment'), 'MT' ,copyIndex(1) ) ) ]"
        }
      }
    },
    // Remove the Public DNS from the Subnet, set only DC1
    {
      "name": "dpRemovePublicDNS",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('DC1vmName'), '/extensions/vmdscDC1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('dpSetvNetDNS')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Deployment": {
            "value": "[variables('Deployment')]"
          },
          "DNSServers": {
            "value": [
              "[variables('DC1PrivateIPAddress')]",
              "10.0.0.50"
            ]
          }
        }
      }
    },
    // Add DC2 in as DNS Server
    {
      "name": "dpAddDC2DNSServer",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('DC2vmName'), '/extensions/vmdscDC2')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('dpSetvNetDNS')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Deployment": {
            "value": "[variables('Deployment')]"
          },
          "DNSServers": {
            "value": [
              "[variables('DC1PrivateIPAddress')]",
              "[variables('DC2PrivateIPAddress')]"
            ]
          }
        }
      }
    }
  ],
  "outputs": {
    "DC1-fqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('DC1PublicIPName')), '2016-07-01').dnsSettings.fqdn]",
      "type": "string"
    },
    "DC2-fqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('DC2PublicIPName')), '2016-07-01').dnsSettings.fqdn]",
      "type": "string"
    },
    "MS1-fqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses','PublicIP_vmMS1'), '2016-07-01').dnsSettings.fqdn]",
      "type": "string"
    },
    "MT1-fqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses','PublicIP_vmMT1'), '2016-07-01').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
